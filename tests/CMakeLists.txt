PROJECT(tests)

INCLUDE(K3DParseArguments)

# Provides a consistent interface for running all K-3D tests
FUNCTION(K3D_TEST TEST_NAME)
	K3D_PARSE_ARGUMENTS(TEST "TARGET;CMAKE_SCRIPT;PYTHON_SCRIPT;K3D_PYTHON_SCRIPT;REQUIRES;LABELS;WORKING_DIRECTORY;ARGUMENTS" "XFAIL" ${ARGN})

	FOREACH(REQUIREMENT ${TEST_REQUIRES})
		IF(NOT ${REQUIREMENT})
			RETURN()
		ENDIF()
	ENDFOREACH()

	IF(TEST_TARGET)
		GET_TARGET_PROPERTY(TARGET_LOCATION ${TEST_TARGET} LOCATION)
		IF(TEST_WORKING_DIRECTORY)
			ADD_TEST(${TEST_NAME} "${CMAKE_COMMAND}" -E chdir "${TEST_WORKING_DIRECTORY}" "${TARGET_LOCATION}" ${TEST_ARGUMENTS})
		ELSE()
			ADD_TEST(${TEST_NAME} "${TARGET_LOCATION}" ${TEST_ARGUMENTS})
		ENDIF()
	ELSEIF(TEST_CMAKE_SCRIPT)
		IF(NOT TEST_WORKING_DIRECTORY)
			MESSAGE(SEND_ERROR "CMAKE_SCRIPT directive requires WORKING_DIRECTORY")
		ENDIF()
		ADD_TEST(${TEST_NAME} "${CMAKE_COMMAND}" -E chdir "${TEST_WORKING_DIRECTORY}" "${CMAKE_COMMAND}" -P "${TEST_CMAKE_SCRIPT}")
	ELSEIF(TEST_PYTHON_SCRIPT)
		ADD_TEST(${TEST_NAME} "${PYTHON_COMMAND}" "${TEST_PYTHON_SCRIPT}")
	ELSEIF(TEST_K3D_PYTHON_SCRIPT)
		ADD_TEST(${TEST_NAME}
			${k3d_BINARY_DIR}/bin/k3d
			--log-level=debug
			--plugins=${k3d_BINARY_DIR}/${K3D_LIBDIR}/k3d/plugins
			--share=${k3d_SOURCE_DIR}/share
			--ui=${k3d_BINARY_DIR}/${K3D_LIBDIR}/k3d/plugins/k3d-nui.module
			--script=${TEST_K3D_PYTHON_SCRIPT}
			--setenv "PYTHONPATH=${tests_SOURCE_DIR}"
			--setenv "K3D_TEST_SOURCE_PATH=${tests_SOURCE_DIR}"
			--setenv "K3D_TEST_BINARY_PATH=${tests_BINARY_DIR}"
			--exit
			)
	ENDIF()

	IF(TEST_LABELS)
		FOREACH(LABEL ${TEST_LABELS})
			SET(LABELS "${LABELS} ${LABEL}")
		ENDFOREACH()
		SET_TESTS_PROPERTIES(${TEST_NAME} PROPERTIES LABELS ${LABELS})
	ENDIF()

	IF(TEST_XFAIL)
		SET_TESTS_PROPERTIES(${TEST_NAME} PROPERTIES WILL_FAIL TRUE)
	ENDIF()
ENDFUNCTION()

MACRO(K3D_ADD_TEST TEST_NAME)
	K3D_PARSE_ARGUMENTS(TEST "REQUIRES;LABELS" "NGUI;SCRIPT;PYTHON;XFAIL" ${ARGN})

	SET(REQUIREMENTS_MET 1)
	SET(USER_INTERFACE --ui=${k3d_BINARY_DIR}/${K3D_LIBDIR}/k3d/plugins/k3d-nui.module)
	SET(WILL_FAIL 0)

	IF(TEST_NGUI)
		IF(NOT K3D_BUILD_NGUI_MODULE)
			SET(REQUIREMENTS_MET 0)
		ENDIF()
		SET(USER_INTERFACE --ui=${k3d_BINARY_DIR}/${K3D_LIBDIR}/k3d/plugins/k3d-ngui.module --batch --no-custom-layouts --no-splash)
	ENDIF()

	IF(TEST_SCRIPT)
		SET(SCRIPT_NAME ${TEST_NAME})
		SET(SCRIPT "--script=${CMAKE_CURRENT_SOURCE_DIR}/${SCRIPT_NAME}")
	ENDIF()

	IF(TEST_PYTHON)
		IF(NOT K3D_BUILD_PYTHON_MODULE)
			SET(REQUIREMENTS_MET 0)
		ENDIF()
		SET(SCRIPT_NAME ${TEST_NAME})
		SET(SCRIPT "--script=${CMAKE_CURRENT_SOURCE_DIR}/${SCRIPT_NAME}")
		SET(PYTHONPATH --setenv "PYTHONPATH=${CMAKE_CURRENT_SOURCE_DIR}")
	ENDIF()

	FOREACH(REQUIREMENT ${TEST_REQUIRES})
		IF(NOT ${REQUIREMENT})
			SET(REQUIREMENTS_MET 0)
		ENDIF()
	ENDFOREACH()

	IF(REQUIREMENTS_MET)
		ADD_TEST(${TEST_NAME}
			${k3d_BINARY_DIR}/bin/k3d
			--log-level=debug
			--plugins=${k3d_BINARY_DIR}/${K3D_LIBDIR}/k3d/plugins
			--share=${k3d_SOURCE_DIR}/share
			${USER_INTERFACE}
			${SCRIPT}
			${PYTHONPATH}
			--setenv "K3D_TEST_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}"
			--setenv "K3D_TEST_BINARY_PATH=${CMAKE_CURRENT_BINARY_DIR}"
			--exit
			)

		IF(TEST_LABELS)
			SET_TESTS_PROPERTIES(${TEST_NAME} PROPERTIES LABELS ${TEST_LABELS})
		ENDIF()

		IF(TEST_XFAIL)
			SET_TESTS_PROPERTIES(${TEST_NAME} PROPERTIES WILL_FAIL TRUE)
		ENDIF()
	ENDIF(REQUIREMENTS_MET)
ENDMACRO(K3D_ADD_TEST)

FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bitmaps)
FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bitmaps/differences)
FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/meshes)
FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/meshes/differences)

# Run tests that extract information about the underlying platform
ADD_SUBDIRECTORY(platform)

# Run tests that enforce coding-standards
ADD_SUBDIRECTORY(code)

# Run tests that exercise the C++ SDK
ADD_SUBDIRECTORY(sdk)

# Run tests that exercise the Python SDK
ADD_SUBDIRECTORY(python)

# Run tests that do a simple "smoke-check" on binaries ...
K3D_TEST(startup.k3d-uuidgen TARGET k3d-uuidgen LABELS startup uuid)

# Run tests that exercise bitmap-related functionality
ADD_SUBDIRECTORY(bitmap)

# Run tests that exercise mesh-related functionality
ADD_SUBDIRECTORY(mesh)

#############################################################################333
# Tests waiting to be reorganized ...

K3D_ADD_TEST(test.startup)

K3D_ADD_TEST(test.script.detect.lang.null SCRIPT XFAIL)
K3D_ADD_TEST(test.script.detect.lang.python.py PYTHON)
K3D_ADD_TEST(test.script.failure.lang.python.py PYTHON XFAIL)
K3D_ADD_TEST(test.script.failure.lang.python.exception.py PYTHON XFAIL)

K3D_ADD_TEST(test.measurements.py PYTHON)
K3D_ADD_TEST(test.PipelineProfiler.py PYTHON)

K3D_ADD_TEST(property.linking.enumeration.py PYTHON)

K3D_ADD_TEST(document.create.py PYTHON)
K3D_ADD_TEST(document.stress.high_node_count.py PYTHON)
K3D_ADD_TEST(document.stress.all_node_types.py PYTHON)
#K3D_ADD_TEST(document.stress.read_all_properties.py PYTHON)

K3D_ADD_TEST(document.serialization.properties.py PYTHON)

K3D_ADD_TEST(document.importer.bogus_input.py PYTHON)

K3D_ADD_TEST(color.source.ColorSourceScript.py PYTHON REQUIRES K3D_BUILD_SCRIPTING_MODULE)
K3D_ADD_TEST(double.source.DoubleSourceScript.py PYTHON REQUIRES K3D_BUILD_SCRIPTING_MODULE)
K3D_ADD_TEST(int32.source.Int32SourceScript.py PYTHON REQUIRES K3D_BUILD_SCRIPTING_MODULE)
K3D_ADD_TEST(string.source.StringSourceScript.py PYTHON REQUIRES K3D_BUILD_SCRIPTING_MODULE)
K3D_ADD_TEST(vector3.source.Vector3SourceScript.py PYTHON REQUIRES K3D_BUILD_SCRIPTING_MODULE)

K3D_ADD_TEST(anim.AnimationTrack.py PYTHON REQUIRES K3D_BUILD_ANIMATION_MODULE)

K3D_ADD_TEST(core.FrozenTransformation.py PYTHON REQUIRES K3D_BUILD_CORE_MODULE)

K3D_ADD_TEST(test.mesh.solid.py PYTHON)
K3D_ADD_TEST(test.mesh.solid.failure.py PYTHON)

K3D_ADD_TEST(notifier.InotifyFileChangeNotifier.py PYTHON REQUIRES K3D_BUILD_INOTIFY_MODULE)

K3D_ADD_TEST(parallel.grain_size.ScalePoints.py PYTHON REQUIRES K3D_ENABLE_PARALLEL)
K3D_ADD_TEST(parallel.thread_count.ScalePoints.py PYTHON REQUIRES K3D_ENABLE_PARALLEL)

K3D_ADD_TEST(offscreen.GLXCameraToBitmap.py PYTHON REQUIRES K3D_BUILD_GLX_MODULE)
K3D_ADD_TEST(offscreen.OpenGLFramebufferCameraToBitmap.py PYTHON REQUIRES K3D_BUILD_OPENGL_FRAMEBUFFER_MODULE)
K3D_ADD_TEST(offscreen.VirtualCameraToBitmap.py PYTHON REQUIRES K3D_BUILD_VIRTUAL_OFFSCREEN_MODULE)
K3D_ADD_TEST(offscreen.WGLCameraToBitmap.py PYTHON REQUIRES K3D_BUILD_WGL_MODULE)

K3D_ADD_TEST(ngui.tools.move.py PYTHON NGUI)
K3D_ADD_TEST(ngui.tools.rotate.py PYTHON NGUI)

K3D_ADD_TEST(cuda.mesh.Conversion.py PYTHON REQUIRES K3D_BUILD_MESH_MODULE REQUIRES K3D_BUILD_CUDA_MODULE)

K3D_ADD_TEST(benchmark.CompareResults.py PYTHON REQUIRES K3D_BUILD_CUDA_MODULE)

K3D_ADD_TEST(scalar.source.PapagayoLipsyncReader.py PYTHON REQUIRES K3D_BUILD_LIPSYNC_MODULE)
K3D_ADD_TEST(scalar.source.ScalarExpression.py PYTHON REQUIRES K3D_BUILD_SCALAR_MODULE)

